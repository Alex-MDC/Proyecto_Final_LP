package com.mycompany.producer_consumer;


import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;



import javax.swing.JProgressBar;
import javax.swing.*; 

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sdegante
 */

public class GUIFrame extends javax.swing.JFrame {
    JProgressBar progressBar;
    /*JProgressBar jb;    
int i=0,num=0;     
GUIFrame(){    
jb=new JProgressBar(0,100);    
jb.setBounds(40,40,160,30);         
jb.setValue(0);    
jb.setStringPainted(true);    
add(jb);    
setSize(250,150);    
setLayout(null);    
}    
public void iterate(){    
while(i<=2000){    
  jb.setValue(i);    
  i=i+20;    
  try{Thread.sleep(150);}catch(Exception e){}    
}/*
    /**
     * Creates new form GUIFrame
     */
    public GUIFrame() {
        initComponents();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tiempoDeEsperaProductores = new javax.swing.JTextField();
        tiempoDeEsperaConsumidores = new javax.swing.JTextField();
        buffer_size_input = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rangoDeValoresAlto = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Productores_cantidad = new javax.swing.JSpinner();
        Consumidores_cantidad = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rangoDeValoresBajo = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        tareasPorHacer = new javax.swing.JScrollPane();
        tareasPorHacerTabla = new javax.swing.JTable();
        tareasRealizadas = new javax.swing.JScrollPane();
        tareasRealizadasTabla = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jSpinner4 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel5.setText("Tiempo de Espera (0 - 10,000ms)  ");

        tiempoDeEsperaProductores.setText("0");

        tiempoDeEsperaConsumidores.setText("0");

        buffer_size_input.setText("1");
        buffer_size_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buffer_size_inputActionPerformed(evt);
            }
        });

        jLabel6.setText("Rango de Valores (n, m)");

        rangoDeValoresAlto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9, 1));

        jLabel1.setText("Productores");

        jLabel2.setText("Consumidores");

        Productores_cantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        Productores_cantidad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Consumidores_cantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        jLabel3.setText("Tamaño del Buffer (1 - 100)");

        jLabel4.setText("Cantidad");

        rangoDeValoresBajo.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Consumidores_cantidad)
                            .addComponent(Productores_cantidad)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(rangoDeValoresBajo, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tiempoDeEsperaProductores)
                            .addComponent(tiempoDeEsperaConsumidores)
                            .addComponent(rangoDeValoresAlto, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(buffer_size_input))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Productores_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tiempoDeEsperaProductores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Consumidores_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tiempoDeEsperaConsumidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(buffer_size_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(rangoDeValoresAlto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rangoDeValoresBajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Configuración", jPanel2);

        tareasPorHacerTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ));
        tareasPorHacerTabla.getTableHeader().setReorderingAllowed(false);
        tareasPorHacer.setViewportView(tareasPorHacerTabla);

        tareasRealizadasTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Tarea", "Resultado"
            }
        ));
        tareasRealizadas.setViewportView(tareasRealizadasTabla);

        jLabel7.setText("Tareas por hacer");

        jLabel8.setText("Tareas realizadas");

        jProgressBar1.setValue(50);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tareasPorHacer, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tareasRealizadas, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tareasPorHacer, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(tareasRealizadas, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Procesos", jPanel3);

        jButton1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 51));
        jButton1.setText("INICIAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 153, 0));
        jButton2.setText("S T O P ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //poner el stop / detener aquiii----------------------------------------------
         System.out.println("BUTTON------STOP---------CLICKED!");
         //Cuando se presione el botton de stop se saldra de la applicacion
         System.exit(0);
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        // que hacer cuando se pique start!
        System.out.println("BUTTON-----START------CLICKED!");
        
        
        DefaultTableModel dtmPorHacer = (DefaultTableModel) tareasPorHacerTabla.getModel();
        DefaultTableModel dtmRealizadas = (DefaultTableModel) tareasRealizadasTabla.getModel();

        dtmPorHacer.setRowCount(0);
        dtmRealizadas.setRowCount(0);
                
        // Guardar los valores de rangos de operaciones scheme
        int rangoValoresBajo = (Integer) rangoDeValoresBajo.getValue();
        int rangoValoresAlto = (Integer) rangoDeValoresAlto.getValue();
        int tiempoEsperaConsumidores = Integer.parseInt(tiempoDeEsperaConsumidores.getText());
        int tiempoEsperaProductores = Integer.parseInt(tiempoDeEsperaProductores.getText());
        int buffer_size = Integer.parseInt( buffer_size_input.getText());
                
        
        /*
                Deteccion de error valores fuera de rango 
        */
        
        if (tiempoEsperaConsumidores > 10000 || tiempoEsperaConsumidores < 0) {
            JOptionPane.showMessageDialog(null, "El tiempo de espera de consumidores es incorrecto!");
        } else if (tiempoEsperaProductores > 10000 || tiempoEsperaProductores < 0) {
            JOptionPane.showMessageDialog(null, "El tiempo de espera de productores es incorrecto!");
        } else if (rangoValoresBajo > rangoValoresAlto) {
            JOptionPane.showMessageDialog(null, "El rango es incorrecto!");
        } else if(buffer_size > 100 || buffer_size < 1) {
            JOptionPane.showMessageDialog(null, "El tamaño de buffer es incorrecto!");
        } else {
            //implementar logica de buffer size
        Buffer buffer = new Buffer(buffer_size);
        
        
        //implementar logica de num de productores-------------------
        Producer[] producer_array;
        
        System.out.println("Cantidad de productores:" + Productores_cantidad.getValue() );
        int num_productores = (int) Productores_cantidad.getValue();
        
        //allocating memory for n producrers
        producer_array = new Producer[num_productores];
        
        for (int i =0; i < num_productores; i++){
            producer_array[i] = new Producer(buffer);
            producer_array[i].producer_id = i+1;
            producer_array[i].tiempoDeEspera = tiempoEsperaProductores; 
            producer_array[i].start();
        }
        
                
        for (int i =0; i < num_productores; i++){
            Vector v= new Vector();
            v.add(producer_array[i].get_id());
            v.add(producer_array[i].get_product());
            dtmPorHacer.addRow(v);
        }
           
        //implementar logica de num de consumidores-------------
        Consumer[] consumer_array;
        
        System.out.println("Cantidad de consumidores:" + Consumidores_cantidad.getValue() );
        int num_consumidores = (int) Consumidores_cantidad.getValue();
        
        //allocating memory for n consumers
        consumer_array = new Consumer[num_consumidores];
        for (int i =0; i < num_consumidores; i++){
            consumer_array[i] = new Consumer(buffer);
            consumer_array[i].consumer_id = i+1;
            consumer_array[i].tiempoDeEspera = tiempoEsperaConsumidores; 
            consumer_array[i].start();
        }

        
        for (int i =0; i < num_consumidores; i++){
            Vector v= new Vector();
            v.add(consumer_array[i].get_id());
            String producto = "";
            v.add(consumer_array[i].get_product());
            // Falta obtener resultado
            v.add("");
            dtmPorHacer.removeRow(0);
            dtmRealizadas.addRow(v);

        }
            
    }
            

        //Tiempo espera entre 0-10000 producer
      String tiempoEsperaP;
        tiempoEsperaP = jTextField1.getText();
        int tmpoEsperaP=Integer.parseInt(tiempoEsperaP);
        if(tmpoEsperaP<0 && tmpoEsperaP>10000){
            //Si cumple con la condicion se ejecuta el codigo
            System.out.println("ERROR: El valor no esta entre 0-10000");
            noEjecutar();
        }
            else{
                   ejecutar();
                    }
            //Si no cumple con la condicion, crear un switch que no deje ejecutar el START
            
            //Tiempo espera entre 0-10000 consumer
      String tiempoEsperaC;
        tiempoEsperaC = jTextField2.getText();
        int tmpoEsperaC = Integer.parseInt(tiempoEsperaC);
        if(tmpoEsperaC<0 && tmpoEsperaC>10000){
            //Si cumple con la condicion se ejecuta el codigo
           System.out.println("ERROR: El valor no esta entre 0-10000");
           noEjecutar();
        }
            else{
                    ejecutar();
                    }
            //Si no cumple con la condicion, crear un switch que no deje ejecutar el START
        
            
       
      

    }//GEN-LAST:event_jButton1ActionPerformed
    
      
   


    
    
    public boolean ejecutar(){
       jButton1.setEnabled(true);
       return true;
    }
    
    public boolean noEjecutar(){
       jButton1.setEnabled(false);
       return false;
    }
    
    public DefaultTableModel getnumHacer(){
        return (DefaultTableModel)jTable1.getModel();
    }
    
    public DefaultTableModel getnumRealizado(){
        return (DefaultTableModel)jTable2.getModel();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public  void startUI(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Consumidores_cantidad;
    private javax.swing.JSpinner Productores_cantidad;
    private javax.swing.JTextField buffer_size_input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSpinner rangoDeValoresAlto;
    private javax.swing.JSpinner rangoDeValoresBajo;
    private javax.swing.JScrollPane tareasPorHacer;
    private javax.swing.JTable tareasPorHacerTabla;
    private javax.swing.JScrollPane tareasRealizadas;
    private javax.swing.JTable tareasRealizadasTabla;
    private javax.swing.JTextField tiempoDeEsperaConsumidores;
    private javax.swing.JTextField tiempoDeEsperaProductores;
    // End of variables declaration//GEN-END:variables
}
